#!/usr/bin/env python3

import sys
import requests
import json
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

if len(sys.argv) < 2:
    print('you need to provide an ip to lookup: arin <ip>')
    sys.exit(1)

headers = {
    'Accept': 'application/json'
}

ip = sys.argv[1]
results = requests.get('https://whois.arin.net/rest/ip/{ip}'.format(ip=ip),
                       headers=headers, verify=False)

if not results.ok:
    print("ERROR: " + results.status_code)
    sys.exit(1)

net = json.loads(results.text)['net']

if 'orgRef' in net:
    org = net['orgRef']['@name']
    handle = net['orgRef']['@handle']
elif 'customerRef' in net:
    org = net['customerRef']['@name']
    handle = net['customerRef']['@handle']
else:
    org = "Unknown Org"
    handle = "Unknown Handle"

if 'originASes' in net:
    AS = " - " + net['originASes']['originAS']['$']
else:
    AS = ""

if type(net['netBlocks']['netBlock']) == list:
    for network in net['netBlocks']['netBlock']:
        block = network['startAddress']['$']
        cidr = network['cidrLength']['$']
        desc = network['description']['$']

        print("{org} ({handle}){AS}".format(org=org, handle=handle, AS=AS))
        print("{block}/{cidr} - {description}".format(block=block,
                                                      cidr=cidr,
                                                      description=desc))
else:
    block = net['netBlocks']['netBlock']['startAddress']['$']
    cidr = net['netBlocks']['netBlock']['cidrLength']['$']
    desc = net['netBlocks']['netBlock']['description']['$']

    print("{org} ({handle}){AS}".format(org=org, handle=handle, AS=AS))
    print("{block}/{cidr} - {description}".format(block=block,
                                                  cidr=cidr,
                                                  description=desc))
